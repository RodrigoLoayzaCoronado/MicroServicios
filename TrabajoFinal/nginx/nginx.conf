events {
    worker_connections 1024;
}

http {
    # Definición de Upstreams para tus servicios de TrabajoFinal
    # Estos nombres deben coincidir con los nombres de tus servicios en docker-compose.yml
    # y los puertos son los PUERTOS INTERNOS que cada servicio escucha.

    upstream auth_service_backend {
        server auth-service:3001; # Tu auth-service escucha internamente en el puerto 3000
    }

    upstream specialties_service_backend {
        server specialties-service:3002; # Tu specialties-service escucha internamente en el puerto 3001
    }

    upstream reservations_service_backend {
        server reservations-service:3003; # Tu reservations-service escucha internamente en el puerto 3003
    }

    # Si tu notifications-service tiene un endpoint HTTP que necesites proxy, configúralo aquí.
    # Si solo es un consumidor de RabbitMQ, no necesitaría un upstream HTTP.
    # upstream notifications_service_backend {
    #     server notifications-service:PUERTO_INTERNO;
    # }

    upstream frontend_service {
        server frontend:3005; # El servicio 'frontend' en Docker Compose escuchará en el puerto 3000
    }

    server {
        listen 80; # Nginx escuchará en el puerto 80 del host
        server_name localhost;

        # Proxy para el Frontend
        # Todas las solicitudes a la raíz (/) que no coincidan con otro 'location'
        # serán enviadas al servicio 'frontend'.
        location / {
            proxy_pass http://frontend_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Manejar CORS para el frontend (si las respuestas del http-server también lo necesitan)
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;
            
            if ($request_method = 'OPTIONS') {
                return 204;
            }
        }

        # Proxy para el Servicio de Autenticación
        # Las solicitudes a /auth/ (ej. /auth/login) serán enviadas a auth-service:3000
        location /auth/ {
            proxy_pass http://auth_service_backend/; # La barra al final es importante
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Manejar CORS
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;
            
            if ($request_method = 'OPTIONS') {
                return 204;
            }
        }

        # Proxy para el Servicio de Especialidades
        # Las solicitudes a /specialties/ (ej. /specialties/getSpecialties) serán enviadas a specialties-service:3001
        location /specialties/ {
            proxy_pass http://specialties_service_backend/; # La barra al final es importante
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Manejar CORS
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;

            if ($request_method = 'OPTIONS') {
                return 204;
            }
        }

        # Proxy para el Servicio de Reservas
        # Las solicitudes a /appointments/ (ej. /appointments/create) serán enviadas a reservations-service:3003
        location /appointments/ {
            proxy_pass http://reservations_service_backend/; # La barra al final es importante
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Manejar CORS
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;

            if ($request_method = 'OPTIONS') {
                return 204;
            }
        }
    }
}